# Copyright (c) 2024, 2025 Oracle and/or its affiliates.
#
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
#
# ORACLE DOCKERFILES PROJECT
# --------------------------
# This is the Dockerfile for Oracle JDK 8 on Oracle Linux 8
#
# ARGS
# ----
# This docker file requires two arguments:
# 1) JDK8_TOKEN is a valid dowload token for JDK 8.  It can be created in cloud.oracle.com/jms under Java Download
# Token generation is documented on https://docs.cloud.oracle.com/en-us/iaas/jms/doc/java-download.html
# 2) OCI_REGION is the Oracle Cloud Infrastucture (OCI) region where the token is generated.
#
# REQUIRED FILES TO BUILD THIS IMAGE
# ----------------------------------
# This dockerfile will download a copy of latest version of JDK 8 from
#	https://javamanagementservice-download.<OCI_REGION>.oci.oraclecloud.com/java/8/latest/
#
# It will use either x64 or aarch64 depending on the target platform
#
# HOW TO BUILD THIS IMAGE
# -----------------------
# Run:
#      $ docker build --file Dockerfile.ol8 --tag oracle/jdk:8 --build-arg JDK8_TOKEN=<token> --build-arg OCI_REGION=<region> .
#
# The builder image will be used to uncompress the tar.gz file with the Java Runtime.

FROM oraclelinux:8 as builder
ARG JDK8_TOKEN
ARG OCI_REGION

LABEL maintainer="Aurelio Garcia-Ribeyro <aurelio.garciaribeyro@oracle.com>"

# Since the files is compressed as tar.gz first yum install tar. gzip is already in oraclelinux:8
RUN dnf install -y tar

# Default to UTF-8 file.encoding
ENV LANG en_US.UTF-8

# Environment variables for the builder image.
# Required to validate that you are using the correct file

ENV JAVA_URL=https://javamanagementservice-download."${OCI_REGION}".oci.oraclecloud.com/java/8/latest/ \
    JAVA_HOME=/usr/java/jdk-8

SHELL ["/bin/bash", "-o", "pipefail", "-c"]
RUN set -eux; \
    ARCH="$(uname -m)" && \
    if [ "$ARCH" = "x86_64" ]; \
    then \
    JAVA_PKG="$JAVA_URL"jdk-8_linux-x64_bin.tar.gz; \
    else \
    JAVA_PKG="$JAVA_URL"jdk-8_linux-aarch64_bin.tar.gz; \
    fi && \
    JAVA_SHA256="$(curl -L "$JAVA_PKG".sha256)" ;  \
    curl -L --header token:${JDK8_TOKEN} --output /tmp/jdk.tar.gz "$JAVA_PKG" && \
    echo "$JAVA_SHA256" */tmp/jdk.tar.gz | sha256sum -c -; \
    mkdir -p "$JAVA_HOME"; \
    tar --extract --file /tmp/jdk.tar.gz --directory "$JAVA_HOME" --strip-components 1

## Get a fresh version of Oracle Linux 8 for the final image

FROM oraclelinux:8

# Default to UTF-8 file.encoding
ENV LANG en_US.UTF-8
ENV JAVA_HOME=/usr/java/jdk-8
ENV PATH $JAVA_HOME/bin:$PATH

# Copy the uncompressed Java Runtime from the builder image
COPY --from=builder $JAVA_HOME $JAVA_HOME

##
RUN dnf -y update; \
    rm -rf /var/cache/dnf; \
    ln -sfT "$JAVA_HOME" /usr/java/default; \
    ln -sfT "$JAVA_HOME" /usr/java/latest; \
    for bin in "$JAVA_HOME/bin/"*; do \
    base="$(basename "$bin")"; \
    [ ! -e "/usr/bin/$base" ]; \
    alternatives --install "/usr/bin/$base" "$base" "$bin" 20000; \
    done; \
    # -Xshare:dump will create a CDS archive to improve startup in subsequent runs
    # the file will be stored as /usr/java/jdk-8/jre/lib/amd64/server/classes.jsa
    # See https://docs.oracle.com/javase/8/docs/technotes/guides/vm/class-data-sharing.html
    java -Xshare:dump;